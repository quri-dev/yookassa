openapi: "3.1.0"
info:
  version: 1.0.0
  title: yookassa

tags:
  - name: payment
webhooks:
  # Each webhook needs a name
  yookassa_hook:
    # This is a Path Item Object, the only difference is that the request is initiated by the API provider
    post:
      description: A new pet is born, let's come and discover it in Petstore.

      requestBody:
        required: true
        description: "https://yookassa.ru/developers/using-api/webhooks#events"
        content:
          application/json:
            schema:
              type: object
              required: [type, event, object]
              properties:
                type:
                  type: string
                  enum: [notification]
                event:
                  type: string
                  enum:
                    [
                      payment.waiting_for_capture,
                      payment.succeeded,
                      payment.canceled,
                      refund.succeeded,
                      payout.succeeded,
                      payout.canceled,
                      deal.closed,
                    ]
                object:
                  oneOf:
                    - $ref: "#/components/schemas/RefundPayment"
                    - $ref: "#/components/schemas/Payment"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
paths:
  /v3/payments:
    get:
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
      security:
        - basicAuth: []
      tags:
        - payment
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                  next_cursor:
                    type: string
                  type:
                    type: string
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Payment"
        default:
          $ref: "#/components/responses/YookassaError"
    post:
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/IdempotenceKey"
      tags:
        - payment
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqPayment"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          $ref: "#/components/responses/YookassaError"
  /v3/payments/{payment_id}:
    parameters:
      - in: path
        name: payment_id
        required: true
        schema:
          type: string
    get:
      security:
        - basicAuth: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        default:
          $ref: "#/components/responses/YookassaError"
  /v3/refunds:
    post:
      security:
        - basicAuth: []
      parameters:
        - $ref: "#/components/parameters/IdempotenceKey"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqRefundPayment"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundPayment"
        default:
          $ref: "#/components/responses/YookassaError"
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  responses:
    YookassaError:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [type, id, code]
            properties:
              type:
                type: string
                enum:
                  - error
              id:
                type: string
              code:
                type: string
                enum:
                  [
                    invalid_request,
                    invalid_credentials,
                    forbidden,
                    not_found,
                    too_many_requests,
                    internal_server_error,
                  ]
              description:
                type: string
              parameter:
                type: string
  parameters:
    IdempotenceKey:
      in: header
      required: true
      description: "Ключ идемпотентности"
      name: Idempotence-Key
      schema:
        type: string
  schemas:
    Amount:
      type: object
      required: [currency, value]
      description: |
        Сумма платежа. Иногда партнеры ЮKassa берут с пользователя дополнительную комиссию, которая не входит в эту сумму.
      properties:
        currency:
          description: |
            Трехбуквенный код валюты в формате ISO-4217. Пример: RUB. Должен соответствовать валюте субаккаунта (recipient.gateway_id), если вы разделяете потоки платежей, и валюте аккаунта (shopId в личном кабинете), если не разделяете.
          type: string
          enum:
            - RUB
        value:
          description: |
            Сумма в выбранной валюте. Всегда дробное значение. Разделитель дробной части — точка, разделитель тысяч отсутствует. Количество знаков после точки зависит от выбранной валюты. Пример: 1000.00.
          type: string
    ReqPayment:
      type: object
      required:
        - amount
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
        confirmation:
          oneOf:
            - $ref: "#/components/schemas/PaymentConfirmationEmbedded"
        capture:
          description: |
            Автоматический прием  поступившего платежа.
          type: boolean
          default: false
        description:
          type: string
          description: |
            Описание транзакции (не более 128 символов), которое вы увидите в личном кабинете ЮKassa, а пользователь — при оплате. Например: «Оплата заказа № 72 для user@yoomoney.ru».
        save_payment_method:
          type: boolean
          description: |
            Сохранение платежных данных (с их помощью можно проводить повторные безакцептные списания ). Значение true инициирует создание многоразового payment_method.
        payment_method_id:
          description: |
            Идентификатор сохраненного способа оплаты
          type: string
        metadata:
          $ref: "#/components/schemas/Metadata"
        receipt:
          $ref: "#/components/schemas/Receipt"

    PaymentConfirmationEmbedded:
      type: object
      required:
        - type
      properties:
        type:
          description: |
            Значение — embedded.
            Код сценария подтверждения.
          type: string
          default: embedded
          enum:
            - embedded
            - external
            - redirect
        return_url:
          type: string
        locale:
          description: |
            Язык интерфейса, писем и смс, которые будет видеть или получать пользователь. Формат соответствует ISO/IEC 15897. Возможные значения: ru_RU, en_US. Регистр важен.
          type: string
    Payment:
      type: object
      required:
        [id, status, amount, recipient, created_at, test, paid, refundable]
      properties:
        id:
          type: string
        status:
          $ref: "#/components/schemas/PaymentStatus"
        cancellation_details:
          type: object
          properties:
            party:
              type: string
            reason:
              type: string
              enum:
                - general_decline
                - insufficient_funds
                - rejected_by_payee
                - rejected_by_timeout
                - yoo_money_account_closed
                - payment_article_number_not_found
                - payment_basket_id_not_found
                - payment_tru_code_not_found
                - some_articles_already_refunded
                - too_many_refunding_articles
        paid:
          type: boolean
        amount:
          $ref: "#/components/schemas/Amount"
        authorization_details:
          type: object
          properties:
            rrn:
              type: string
            auth_code:
              type: string
            three_d_secure:
              type: object
              properties:
                applied:
                  type: boolean
        created_at:
          type: string
          format: date-time
        description:
          type: string
        expires_at:
          type: string
          format: date-time
        metadata:
          $ref: "#/components/schemas/Metadata"
        payment_method:
          type: object
          required:
            - type
            - id
            - saved
          properties:
            type:
              type: string
            id:
              type: string
            saved:
              type: boolean
            card:
              type: object
              properties:
                first6:
                  type: string
                last4:
                  type: string
                expiry_month:
                  type: string
                expiry_year:
                  type: string
                card_type:
                  type: string
                card_product:
                  type: object
                  properties:
                    code:
                      type: string
                    name:
                      type: string
                issuer_country:
                  type: string
                issuer_name:
                  type: string
            title:
              type: string
            status:
              type: string
              enum:
                - "pending"
                - "active"
                - "inactive"
        recipient:
          type: object
          properties:
            account_id:
              type: string
            gateway_id:
              type: string
        refundable:
          type: boolean
        test:
          type: boolean
        income_amount:
          type: object
          properties:
            value:
              type: string
            currency:
              type: string
        confirmation:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              enum: [embedded, redirect]
            confirmation_token:
              type: string
            confirmation_url:
              type: string
    PaymentStatus:
      type: string
      enum:
        - pending
        - waiting_for_capture
        - succeeded
        - canceled
    Metadata:
      type: object
      additionalProperties: true
    RefundPayment:
      type: object
      required: [id, payment_id, status, created_at, amount]
      properties:
        id:
          type: string
        payment_id:
          type: string
        status:
          $ref: "#/components/schemas/PaymentStatus"
        created_at:
          type: string
          format: date-time
        amount:
          $ref: "#/components/schemas/Amount"
    ReqRefundPayment:
      type: object
      required: [amount, payment_id]
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
        payment_id:
          type: string

    Receipt:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ReceiptItem"
        customer:
          $ref: "#/components/schemas/ReceiptCustomer"

    ReceiptItem:
      type: object
      required: [description, amount, vat_code, quantity]
      properties:
        description:
          type: string
        amount:
          $ref: "#/components/schemas/Amount"
        vat_code:
          type: integer
          description: |
                1	Без НДС
                2	НДС по ставке 0%
                3	НДС по ставке 10%
                4	НДС по ставке 20%
                5	НДС по расчетной ставке 10/110
                6	НДС по расчетной ставке 20/120
                7	НДС по ставке 5%
                8	НДС по ставке 7%
                9	НДС по расчетной ставке 5/105
                10	НДС по расчетной ставке 7/107
          minimum: 1
          maximum: 10
        quantity:
          type: integer
        payment_subject:
          type: string
          enum:
            - commodity
            - job
            - service
            - payment
            - casino
            - another
        payment_mode:
          type: string
          enum:
            - full_prepayment
            - full_payment
    
    ReceiptCustomer:
      type: object
      properties:
        full_name:
          type: string
        inn:
          type: string
        email:
          type: string
        phone: 
          type: string
