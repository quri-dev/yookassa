// Code generated by ogen, DO NOT EDIT.

package ogencl

import (
	"net/http"
)

// Handle handles webhook request.
//
// Returns true if there is a webhook handler for given name and requested method.
func (s *WebhookServer) Handle(webhookName string, w http.ResponseWriter, r *http.Request) bool {
	switch webhookName {
	case "yookassa_hook":
		switch r.Method {
		case "POST":
			s.handleYookassaHookPostRequest([0]string{}, false, w, r)
		default:
			return false
		}
		return true
	default:
		return false
	}
}

// Handler returns http.Handler for webhook.
//
// Returns NotFound handler if spec doesn't contain webhook with given name.
//
// Returned handler calls MethodNotAllowed handler if webhook doesn't define requested method.
func (s *WebhookServer) Handler(webhookName string) http.Handler {
	switch webhookName {
	case "yookassa_hook":
		return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			// We know that webhook exists, so false means wrong method.
			if !s.Handle(webhookName, w, r) {
				s.notAllowed(w, r, "POST")
			}
		})
	default:
		return http.HandlerFunc(s.notFound)
	}
}
